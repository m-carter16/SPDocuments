<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="MarlinAlliance" constructor="SPDocuments" version="1.0.24" display-name-key="SpDocsPCFControl" description-key="SPDocuments description" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="pcfBoundControl" display-name-key="Bound Dummy Field" description-key="Bound control for PCF" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="documentTypes" display-name-key="Document types" description-key="Comma separated string of document types" of-type="Multiple" usage="input" required="true" />
    <property name="siteUrl" display-name-key="SharePoint Site Url" description-key="Url of the SharePoint site where document library is located" of-type="Multiple" usage="input" required="true" />
    <property name="libraryName" display-name-key="Document Library Name" description-key="Name of the SharePoint document library" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="clientId" display-name-key="AAD Client Id" description-key="Azure Active Directory Client Id" of-type="SingleLine.Text" usage="input" required="true" />    
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.8.6" />
      <platform-library name="Fluent" version="9.46.2" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/SPDocuments.css" order="1" />
      <resx path="strings/SPDocuments.1033.resx" version="1.0.0" />
      -->
    </resources>    
    <feature-usage>
      <!-- <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" /> -->
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
  </control>
</manifest>
